openapi: 3.1.0
info:
  title: RaaSWebAPIv2
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  '/map/{map_id}':
    get:
      summary: get MapMeta
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/mapMeta.v2.json
      operationId: get-mapMeta
    post:
      summary: post new MapMeta
      tags: []
      responses: {}
      operationId: post-mapMeta
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: ../models/common/updateDateObject.json
                - $ref: ../models/mapParams.v2.json
    parameters:
      - schema:
          type: string
        name: map_id
        in: path
        required: true
  '/map/{map_id}/params':
    parameters:
      - schema:
          type: string
        name: map_id
        in: path
        required: true
    post:
      summary: post map params
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/mapParams.v2.json
      operationId: post-mapMeta-id-params
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/mapParams.v2.json
    get:
      summary: get map params
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/mapParams.v2.json
      operationId: get-mapMeta-id-params
  '/map/{map_id}/pgm':
    parameters:
      - schema:
          type: string
        name: map_id
        in: path
        required: true
    get:
      summary: get pgm url
      tags: []
      responses: {}
      operationId: getPGMmapURL
    put:
      summary: ''
      operationId: putPGMmap
      responses:
        '200':
          description: OK
  '/map/{map_id}/cost':
    parameters:
      - schema:
          type: string
        name: map_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: getCostmapURL
    put:
      summary: ''
      operationId: putCostmap
      responses:
        '200':
          description: OK
  '/facility/{facility_id}':
    parameters:
      - schema:
          type: string
        name: facility_id
        in: path
        required: true
    get:
      summary: get Facility
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/facility.json
      operationId: getFacility
    post:
      summary: post Facility
      operationId: potFacility
      responses:
        '200':
          description: OK
  /facility:
    get:
      summary: get facilities list
      tags: []
      responses: {}
      operationId: get-facility
components:
  schemas: {}
  responses:
    listRes:
      description: Example response
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
