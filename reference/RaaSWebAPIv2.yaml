openapi: 3.1.0
info:
  title: RaaSWebAPIv2
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /owners:
    get:
      summary: get owners
      tags:
        - owner
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagenate:
                    $ref: ../models/pagenateTemplate.v1.json
                  data:
                    type: array
                    items:
                      $ref: ../models/owner.v1.json
              examples:
                example-1:
                  value:
                    data:
                      - id: 0123456789aaabbb
                        name: owner1
                        owned_robot: []
                        owned_map: []
      operationId: getOwners
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      description: Ownerの一覧を取得
  '/maps/{map_id}':
    get:
      summary: get MapMeta
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/mapMeta.v2.json
              examples:
                example-1:
                  value:
                    id: '0000000000000054'
                    name: ToyotaStadiumv2
                    description: ToyotaStadium-res0.1
                    resolution: 0.1
                    origin:
                      x: -200
                      'y': -200
                    negate: false
                    occupied_thresh: 0.65
                    free_thresh: 0.196
                    size:
                      width: 4000
                      height: 4000
                    pgm_link: '{url}/maps/{map_id}/pgm'
                    costmap_link: '{url}/maps/{map_id}/cost'
                    yaw: 0
      operationId: get-mapMeta
    post:
      summary: post new MapMeta
      tags: []
      responses: {}
      operationId: post-mapMeta
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: ../models/common/updateDateObject.json
                - $ref: ../models/mapParams.v2.json
    parameters:
      - $ref: '#/components/parameters/map_id'
  '/maps/{map_id}/params':
    parameters:
      - $ref: '#/components/parameters/map_id'
    post:
      summary: post map params
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/mapParams.v2.json
      operationId: post-mapMeta-id-params
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/mapParams.v2.json
    get:
      summary: get map params
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/mapParams.v2.json
      operationId: get-mapMeta-id-params
  '/maps/{map_id}/pgm':
    parameters:
      - $ref: '#/components/parameters/map_id'
    get:
      summary: get pgm url
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/url.v1.json
              examples:
                example-1:
                  $ref: '#/components/examples/pgm_linkURL'
      operationId: getPGMmapURL
    put:
      summary: ''
      operationId: putPGMmap
      responses:
        '200':
          description: OK
  '/maps/{map_id}/cost':
    parameters:
      - $ref: '#/components/parameters/map_id'
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/url.v1.json
              examples:
                example-1:
                  $ref: '#/components/examples/costmap_linkURL'
      operationId: getCostmapURL
    put:
      summary: ''
      operationId: putCostmap
      responses:
        '200':
          description: OK
  '/facilities/{facility_id}':
    parameters:
      - $ref: '#/components/parameters/facility_id'
    get:
      summary: get Facility
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/facility.json
      operationId: getFacilityByID
    post:
      summary: post Facility
      operationId: potFacilityByID
      responses:
        '200':
          description: OK
  /facilities/:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/common/pagenateTemplate.v1.json
                  - type: array
                    items:
                      $ref: ../models/facility.json
      operationId: getFacilities
  /maps/:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/common/pagenateTemplate.v1.json
                  - type: array
                    items:
                      $ref: ../models/mapMeta.v2.json
      operationId: get-maps
      parameters:
        - schema:
            type: string
          in: query
          name: search
          description: 検索文字列
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
  '/facilities/{facility_id}/elevators':
    parameters:
      - $ref: '#/components/parameters/facility_id'
    get:
      summary: getElevetorsByFacilityID
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/common/pagenateTemplate.v1.json
                  - type: array
                    items:
                      $ref: ../models/elevator.json
      operationId: get-facility-facility_id-elevators
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
    post:
      summary: postElevetorsByFacilityID
      operationId: post-facilities-facility_id-elevators
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - description: 登録された分だけ返す
                    items:
                      $ref: ../models/elevator.json
                type: array
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - maxItems: 20
                  uniqueItems: true
                  items:
                    $ref: ../models/elevator.post.json
              type: array
  '/facilities/{facility_id}/elevators/{elevator_id}':
    parameters:
      - $ref: '#/components/parameters/facility_id'
      - $ref: '#/components/parameters/elevator_id'
    get:
      summary: get Elevator By Elovator ID
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/elevator.json
      operationId: get-facilities-facility_id-elevators-elevator_id
    delete:
      summary: delete Elevator By Elovator ID
      tags: []
      responses:
        '200':
          description: OK
      operationId: delete-facilities-facility_id-elevators-elevator_id
    put:
      summary: put Elevator By Elovator ID
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/elevator.json
      operationId: put-facilities-facility_id-elevators-elevator_id
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/elevator.post.json
  /elevator:
    get:
      summary: get Elevator By only Elevator ID
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/elevator.json
      operationId: get-elevator
    put:
      summary: put Elevator By only Elevator ID
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/elevator.json
      operationId: put-elevator
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/elevator.post.json
    delete:
      summary: delete Elevator By only Elevator ID
      tags: []
      responses:
        '200':
          description: OK
      operationId: delete-elevator
    parameters:
      - $ref: '#/components/parameters/elevator_id'
components:
  schemas: {}
  responses: {}
  parameters:
    map_id:
      name: map_id
      in: path
      required: true
      schema:
        type: string
        example: '0000000000000013'
        minLength: 16
        maxLength: 16
        pattern: '[0-9]{16}'
    page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 1
      description: ページ数
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        format: int32
        default: 100
        minimum: 1
      description: 表示数
    facility_id:
      name: facility_id
      in: path
      required: true
      schema:
        type: string
      description: 施設のID
    elevator_id:
      name: elevator_id
      in: path
      required: true
      schema:
        type: string
      description: エレベーターのID
  examples:
    pgm_linkURL:
      value:
        description: Example shared example
        type: object
        properties:
          url:
            type: string
            example: 'http://localhost/pgmimage.pgm'
        required:
          - url
    costmap_linkURL:
      value:
        description: Example shared example
        type: object
        properties:
          url:
            type: string
            example: 'http://localhost/costmapimage.png'
        required:
          - url
